# This file is a template, and might need editing before it works on your project.
# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/node/tags/
image: node:latest

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-service
#services:
#  - mysql:latest
#  - redis:latest
#  - postgres:latest

# This folder is cached between builds
# http://docs.gitlab.com/ce/ci/yaml/README.html#cache
cache:
  key: "$CI_BUILD_REF_NAME/01"
  paths:
  - node_modules/
  - npm-cache/
  - yarn-cache/

stages:
  - build
  - deploy

lint:
  stage: build
  script:
    - mkdir -p /root/
    - mkdir -p npm-cache
    - mkdir -p yarn-cache
    - ln -s $PWD/npm-cache /root/.npm
    - ln -s $PWD/yarn-cache /root/.yarn-cache
    - npm i -g yarn --cache-min 999999999
    - yarn
    - npm run lint

build:
  stage: build
  script:
    - mkdir -p /root/
    - mkdir -p npm-cache
    - mkdir -p yarn-cache
    - ln -s $PWD/npm-cache /root/.npm
    - ln -s $PWD/yarn-cache /root/.yarn-cache
    - npm i -g yarn --cache-min 999999999
    - yarn
    - npm run ci-build-app

deploy_staging:
  stage: deploy
  environment: staging
  only:
   - develop
  script:
    - mkdir -p /root/
    - mkdir -p npm-cache
    - mkdir -p yarn-cache
    - ln -s $PWD/npm-cache /root/.npm
    - ln -s $PWD/yarn-cache /root/.yarn-cache
    - npm i -g yarn --cache-min 999999999
    - yarn
    - npm run ci-build-staging
    - apt-get update -qy
    - apt-get install -y ruby-dev rubygems
    - gem install dpl
    - dpl --skip_cleanup --provider=firebase --token=$FIREBASE_DEPLOY_STAGING --project=treesradio-staging
